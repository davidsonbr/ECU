local P = NAB.Provider.base:extend()

function P:new( name, data )
    self.name = name

    self.chassis = data.chassis or "chip.Chassis"
    self.podcontroller = data.podcontroller or "chip.Control Panel.Pod Controller"
    self.driverseat = data.driverseat or ( self.chassis .. ".Driver Seat" )

    self.accel = false
end

function P:toSaveTable()
    local tab = {
        chassis = self.chassis,
        podcontroller = self.podcontroller,
        driverseat = self.driverseat
    }

    return tab
end

P.hook = {
    think = function( self )
        local controller = NAB.Entity.entities[ self.podcontroller ]
        local driverseat = NAB.Entity.entities[ self.driverseat ]

        if not controller and not driverseat then return end

        local driver = driverseat.ent:getDriver()
        if not driver:isValid() then return end

        controller = controller.ent:getWirelink()
        if controller.W == 1 and controller.S == 0 then
            self.ent:acfShift( 1 )
        elseif controller.W == 0 and controller.S == 1 then
            self.ent:acfShift( 2 )
        end
    end
}

return P
