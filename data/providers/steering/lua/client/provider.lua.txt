local P = NAB.Provider.base:extend()

function P:new( name, data )
    self.name = name

    self.chassis = data.chassis or "chip.Chassis"
    self.driverseat = data.driverseat or ( self.chassis .. ".Driver Seat" )

    self.turn = 0
end

function P:toSaveTable()
    local tab = {
        chassis = self.chassis,
        driverseat = self.driverseat
    }

    return tab
end

function P:deinit( )
    net.remove( "[cl:nab_provider][steering] turn." .. self.ent:entIndex() )

    P.super.deinit( self )
end

P.hook = {

}

P.input = {
    pressed = {
        a = function ( self )
            self.turn = self.turn - 1
            net.send( "[cl:nab_provider][steering] turn." .. self.ent:entIndex(), { turn = self.turn } )
        end,
        d = function ( self )
            self.turn = self.turn + 1
            net.send( "[cl:nab_provider][steering] turn." .. self.ent:entIndex(), { turn = self.turn } )
        end
    },
    released = {
        a = function ( self )
            self.turn = self.turn + 1
            net.send( "[cl:nab_provider][steering] turn." .. self.ent:entIndex(), { turn = self.turn } )
        end,
        d = function ( self )
            self.turn = self.turn - 1
            net.send( "[cl:nab_provider][steering] turn." .. self.ent:entIndex(), { turn = self.turn } )
        end
    }
}

return P
